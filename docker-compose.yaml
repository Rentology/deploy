version: '3.8'

services:
  property_db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: property
    volumes:
      - ./property_data:/var/lib/postgresql/data
      - ./property_migrations:/migrations
    ports:
      - "5432:5432"
    networks:
      - app_network

  property_service:
    build: ./property-management-service
    environment:
      DATABASE_URL: postgres://postgres:123@property_db:5432/property?sslmode=disable
      ENV: production
    depends_on:
      - property_db
    command: ["sh", "-c", "wait-for-it property_db:5432 -- make migrate && ./main"]
    networks:
      - app_network
    volumes:
      - ./property_migrations:/migrations

  user_db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: user
    volumes:
      - ./user_data:/var/lib/postgresql/data
      - ./user_migrations:/migrations
    ports:
      - "5433:5432"  # Изменен порт для user_db, чтобы избежать конфликта
    networks:
      - app_network

  user_service:
    build: ./user-service
    environment:
      DATABASE_URL: postgres://postgres:123@user_db:5432/property?sslmode=disable
      ENV: production
    depends_on:
      - user_db
      - rabbitmq
    command: ["sh", "-c", "wait-for-it user_db:5432 -- make migrate && ./main"]
    networks:
      - app_network
    volumes:
      - ./user_migrations:/migrations

  auth_db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: auth
    volumes:
      - ./auth_data:/var/lib/postgresql/data
      - ./auth_migrations:/migrations
    ports:
      - "5434:5432"
    networks:
      - app_network

  auth_service:
    build: ./auth-service
    environment:
      DATABASE_URL: postgres://postgres:123@auth_db:5432/auth?sslmode=disable
      ENV: production
    depends_on:
      - auth_db
      - rabbitmq
    command: [ "sh", "-c", "wait-for-it auth_db:5432 -- make migrate && ./main" ]
    networks:
      - app_network
    volumes:
      - ./auth_migrations:/migrations

  react_app:
    build: ./rentology-frontend
    ports:
      - "80:80"  # Порт, на котором будет доступно ваше приложение
    volumes:
      - ./configs/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - auth_service
      - user_service
      - property_service
    networks:
      - app_network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - app_network
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
